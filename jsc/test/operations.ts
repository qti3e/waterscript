import { testCodeResult } from "./util";

testCodeResult("Add", "2 + 7");
testCodeResult("Sub", "2 - 7");
testCodeResult("Div", "2 / 7");
testCodeResult("Mul", "2 * 7");
testCodeResult("Pow", "2 ** 7");
testCodeResult("Add (strings)", "'Hello ' + 'World'");
testCodeResult("Add (number with string)", "1 + 'World'");
testCodeResult("Sub (strings)", "'A' - 'B'");
testCodeResult("Div (strings)", "'A' / 'B'");
testCodeResult("Mul (strings)", "'A' * 'B'");
testCodeResult("Pow (strings)", "'A' ** 'A'");
testCodeResult("Bitwise Left Shift", "2 << 7");
testCodeResult("Bitwise Right Shift", "2 >> 7");
testCodeResult("Bitwise Unsigned Right Shift", "2 >>> 7");
testCodeResult("Less Than (numbers)", "2 < 5");
testCodeResult("Less Than (number with string)", "2 < 'test'");
testCodeResult("Less Than Equal (numbers)", "2 <= 5");
testCodeResult("Less Than Equal (number with string)", "2 <= 'test'");
testCodeResult("Greater Than (numbers)", "2 > 5");
testCodeResult("Greater Than (number with string)", "2 > 'test'");
testCodeResult("Greater Than Equal (numbers)", "2 >= 5");
testCodeResult("Greater Than Equal (number with string)", "2 >= 'test'");
testCodeResult("Bitwise Or", "2.56 | 0");
testCodeResult("Bitwise And", "2.56 & 2");
testCodeResult("Bitwise Xor", "2.56 ^ 3");
testCodeResult("Bitwise Or (string)", "'a' | 'b'");
testCodeResult("Bitwise And (string)", "'a' & 'b'");
testCodeResult("Bitwise Xor (string)", "'a' ^ 'b'");
testCodeResult("Not", "!true");
testCodeResult("Not (toBoolean)", "!!true");
testCodeResult("Not 2", "!false");
testCodeResult("Not 2 (toBoolean)", "!!false");
testCodeResult("Not (with number)", "!5");
testCodeResult("Not (with number)", "!0");
testCodeResult("Neg", "-true");
testCodeResult("Pos", "+'str'");
